name: CI

on: [push]

jobs:
  build:
    name: ${{ matrix.config.kind }} ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-16.04
            kind: test_release
          - os: ubuntu-16.04
            kind: test_debug

    env:
      CARGO_INCREMENTAL: 0
      RUST_BACKTRACE: full

    steps:
    - uses: actions/checkout@v2
    - name: Cache cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/rs-lib/.cargo/registry
          ~/rs-lib/.cargo/git
          rs-lib/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install bvm binaries
      if: matrix.config.kind == 'test_debug'
      uses: bvm/gh-action@v1.1.0

    - name: Ensure code generation same
      if: matrix.config.kind == 'test_debug'
      run: |
        . $BVM_INSTALL_DIR/bin/bvm-init
        cargo install cargo-clone
        rustup toolchain install nightly
        chmod +x ./scripts/setup.sh
        ./scripts/setup.sh
        chmod +x ./scripts/generate.sh
        ./scripts/generate.sh
        echo Checking for git changes...
        git diff --no-ext-diff --exit-code

    - name: Build debug
      if: matrix.config.kind == 'test_debug'
      run: cd rs-lib && cargo build --verbose
    - name: Test debug
      if: matrix.config.kind == 'test_debug'
      run: cd rs-lib && cargo test --verbose --features serialize

    - name: Build release
      if: matrix.config.kind == 'test_release'
      run: cd rs-lib && cargo build --release --verbose
    - name: Test release
      if: matrix.config.kind == 'test_release'
      run: cd rs-lib && cargo test --release --verbose --features serialize

    - name: Cargo login
      if: matrix.config.kind == 'test_release' && startsWith(github.ref, 'refs/tags/')
      run: cargo login ${{ secrets.CRATES_TOKEN }}

    - name: Cargo publish
      if: matrix.config.kind == 'test_release' && startsWith(github.ref, 'refs/tags/')
      run: cd rs-lib && cargo publish